<!doctype html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="<%= cssPath %>" rel="stylesheet">
</head>
<body>
  <div class="w-full flex justify-center p-20">
    <div class="w-full max-w-3xl">
      <form class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 flex flex-col gap-y-6">
        <%- content %>
        <div class="mt-4">
          <button class="btn btn-primary  w-full" id="submit">
            Submit
          </button>
        </div>
        <div class="">
          <button class="btn btn-secondary w-full" id="clear">
            Clear
            </button>
        </div>
        <div class="">
          <label class="block text-gray-700 text-sm font-bold mb-2" for="password">
            Output
          </label>
          <div id="output"> </div>
        </div>
      </form>
      
    </div>
  </div>
  <script>

// Function to get the values of inputs based on their names
function getInputValues(names) {
  var values = {};
  
  names.forEach(function(name) {
    var inputElement = document.querySelector(`[name="${name}"]`);
    if (inputElement && inputElement.type==='checkbox') {
      values[name] = !!inputElement.checked
    } else if (inputElement) {
      values[name] = inputElement.value
    }
  });

  return values;
}
function clearContainer(container){
  container.innerHTML = ''
}
function clearInputs(names) {
  names.forEach(function(name) {
    var inputElement = document.querySelector(`input[name="${name}"]`);
    if (inputElement) {
      inputElement.value = ''; // Clear the value of the input
    }
  });
}

function showLoader(container){
  const span = document.createElement('span')
  span.className='loading loading-spinner loading-lg'
  container.innerHTML=''
  container.append(span)
}
const inputNames = <%- inputNames %>

const outputType="<%= outputType %>"

console.log('inputNames are:',inputNames)

const submitButton = document.getElementById('submit');
const clearButton = document.getElementById('clear');
const output = document.getElementById('output');
const skeleton = document.getElementById('skeleton');

submitButton.addEventListener('click', (event) => {
  event.preventDefault();

  const data=getInputValues(inputNames)

  showLoader(output)

  fetch('/submit', {
  method: 'POST', // Specify the method
  headers: {
    'Content-Type': 'application/json' // Set the headers
  },
  body: JSON.stringify({params:data, inputNames}) // Convert the data to JSON
})
.then(async response => {
  if (response.ok) {
    return response.text(); // Parse the response as JSON
  }
  throw new Error(`Network response was not ok: ${JSON.stringify(await response.text())}`);
})
.then(data => {
  console.log('Success:', data); // Handle the response data
  clearContainer(output)
  if (outputType==='image'){
    const img = document.createElement('img');
    img.src = data
    output.innerHTML = ''
    output.append(img)
    return 
  }
  output.innerText=data
})
.catch(error => {
  console.log('There was a problem with the fetch operation:', error);
  clearContainer(output)
  output.innerHTML=`<span style="color:red;">${error}</span>`
});

});

clearButton.addEventListener('click', (event) => {
  event.preventDefault();

  clearInputs(inputNames)
  clearContainer(output)

  output.innerText=""
});



// Send the POST request
// fetch('/submit', {
//   method: 'POST', // Specify the method
//   headers: {
//     'Content-Type': 'application/json' // Set the headers
//   },
//   body: JSON.stringify(data) // Convert the data to JSON
// })
// .then(response => {
//   if (response.ok) {
//     return response.json(); // Parse the response as JSON
//   }
//   throw new Error('Network response was not ok.');
// })
// .then(data => {
//   console.log('Success:', data); // Handle the response data
// })
// .catch(error => {
//   console.log('There was a problem with the fetch operation:', error);
// });
    </script>
  
</body>
</html>